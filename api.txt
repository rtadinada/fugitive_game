REST SHIT:

POST /create_game
	Payload:
		{
			"name": NAME,
			"time": GAME_TIME
		}
	Returns 1 on success, 0 on failure


SOCKET SHIT:

Stage 1: Joining a room

Client emissions:
	- "join room"
		Args - String:room_name, String:player_name
		Joins the room specified by room name.
	- "team selection"
		Args - Int:team
		Chooses the selected team (default -1, 0 for robber, 1 for cop)
	- "team locked"
		Args - NONE
		Locks in the player team selection

Server emissions:
	- "player update"
		Args - String:player_name, Int:team, Bool:ready_status
		Notifies client about an update in the character selection process for player player_name
	- "start select locations"
		Args - String:selector_player
		Notifies client to move on to the location selection. If client name is the same as selector_player, client selects the start and goal locations. Otherwise, client is treated to a lovely waiting screen.


Stage 2: Location selection

Client emission:
	- "locations selected"
		Args - Double:Lat1, Double:Lon1, Double:Lat2, Double:Lon2
		Location selecting player sends the locations they so expertly selected. start: (Lat1, Lon1); end: (Lat2, Lon2)

Server emissions:
	- "move to start"
		Args - Double:Lat1, Double:Lon1, Double:Lat2, Double:Lon2
		Notifies clients to go to the move to start position phase. start: (Lat1, Lon1); end: (Lat2, Lon2)


Stage 3: Ready to start

Client emission:
	- "ready to play"
		Args - NONE
		Client notifies server that they are in position and ready to start

S3rv3r 3m1ss10n:
	- "fuckin start already"
		Args - Int:end_time
		Server notifies clients to start the game and supplies the time at which the game is over if it hasn't ended yet. At the end period, cops automatically win. The robbers were pussies.
